version: '3'
services:
  unifi-network-application:
    image: lscr.io/linuxserver/unifi-network-application:9.3.45@sha256:ee536899e67aaaf53e310cf3baa0c74293170902514c216f967795df47a68626
    container_name: unifi-network-application
    labels:
      - traefik.http.routers.unifi.rule=Host(`unifi.spaceduck.cloud`)
      - traefik.http.routers.unifi.middlewares=unifiHeaders@file
      - traefik.http.services.unifi.loadbalancer.server.port=8443
      - traefik.http.services.unifi.loadbalancer.server.scheme=https
      - traefik.http.services.unifi.loadbalancer.serversTRansport=skipTLS@file
      - traefik.http.routers.unifi.tls=true
      - traefik.http.routers.unifi.tls.certresolver=letsencryptprod
      # - traefik.http.routers.unifi.tls.domains[0].main=unifi.spaceduck.cloud
    environment:
      - PUID=568
      - PGID=568
      - TZ=Etc/ATC
      - MONGO_USER=unifi
      - MONGO_PASS=$MONGO_PASS
      - MONGO_HOST=unifi-db
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
      - MONGO_AUTHSOURCE=admin
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
      # - MONGO_TLS= #optional
    volumes:
      - unifi-config:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      # temporarily avoiding traefik
      - 8080:8080
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    restart: unless-stopped
    networks:
      - unifi
      - traefik
  unifi-db:
    image: docker.io/mongo:8.0.12@sha256:95a98776f273721a295b03098578b06bc10281bb56aa828c77e9f60ecc70b150
    container_name: unifi-db
    networks:
      - unifi
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
      - MONGO_USER=unifi
      - MONGO_PASS=$MONGO_PASS
      - MONGO_DBNAME=unifi
      - MONGO_AUTHSOURCE=admin
    volumes:
      - mongo-data:/data/db
    configs:
      - source: mongo-init
        target: /docker-entrypoint-initdb.d/init-mongo.sh
        mode: 555
    restart: unless-stopped
networks:
  traefik:
    name: traefik_default
    external: true
  unifi:
volumes:
  unifi-config:
  mongo-data:
configs:
  mongo-init:
    content: |
      #!/bin/bash
      if which mongosh > /dev/null 2>&1; then
        mongo_init_bin='mongosh'
      else
        mongo_init_bin='mongo'
      fi
      "$${mongo_init_bin}" <<EOF
      use $${MONGO_AUTHSOURCE}
      db.auth("$${MONGO_INITDB_ROOT_USERNAME}", "$${MONGO_INITDB_ROOT_PASSWORD}")
      db.createUser({
        user: "$${MONGO_USER}",
        pwd: "$${MONGO_PASS}",
        roles: [
          { db: "$${MONGO_DBNAME}", role: "dbOwner" },
          { db: "$${MONGO_DBNAME}_stat", role: "dbOwner" }
        ]
      })
      EOF

